#+TITLE: Mutiples of 3 or 5 
#+DATE: <2021-09-21 Tue>
#+AUTHOR: Salvador Guzman
#+EMAIL: guzmansalv@gmail.com
#+OPTIONS: text:t
#+CATEGORY: Math
#+CATEGORY: Article
#+CATEGORY: Problem
#+CATEGORY: ProjectEuler
#+LANGUAGE: en

** Project Euler
*** Problem 1
    #+BEGIN_QUOTE
    If we list all the natural numbers below 10 that are multiples of 3 or 5, we
    get 3, 5, 6 and 9. The sum of these multiples is 23.

    Find the sum of all the multiples of 3 or 5 below 1000.
    #+END_QUOTE

**** Answer
    #+BEGIN_QUOTE
    233168   
    #+END_QUOTE

**** Understanding the Problem

    Having solved this problem multiple times in different contexts, I am very
    prepared to offer a write up for this! Lucky me.

    The straight-forward statement is to figure out the sum of the multiples of
    3 or 5.  In my head, I split this problem into deciphering what these
    numbers are then summing them up. The difficult part is attaining a list of
    these numbers; that is the heart of this problem.

    This is a more narrow entry to the /find numbers that match this criteria/
    problem. In this case, we have the simple rule that the numbers we happen to
    be looking for a multiple of 3 *or* 5. And the problem's scope is limited to
    below 1000. Easy, right?

**** Conceptualizing a Solution
     The position of the problem invites a linear assessment of the solution
     topology. This implicates treating a number line, at least the integers on
     it, up to the number 1000, as a sort of query space. I always conceptualize
     such problems as a SQL query. It is a rather apt interpretation since it
     leaves the particular implementation of how to solve the problem left
     ambiguous but explicitly expresses an interface vis-\{a}-vis the query.

     So, assuming the number line is my query space, then a prospective query
     would be thusly expressed:

     #+NAME: number-query
     #+BEGIN_SRC sql
     SELECT multiple
     FROM Integers
     WHERE
         0 < mutiple < 1000 AND
         multiple \in N AND
         mutiple|3 OR multiple|5
     #+END_SRC

     Wouldn't it be nice if you could query spaces with an infinite number of
     members the same way you could query finite spaces? I think so :).

***** Computational Approach
     An algorithm flavored approach would involve running a for loop from 1 to
     100 and summing those numbers that are multiples of either 3 or 5. There is
     a small gotcha where depending on the particular implementation of the
     algorithm, you might sum an integer doubly; all you would do in this
     scenario is substract out the double. 

     In python, the solution is as simple as this,
     #+NAME: sum-python
     #+BEGIN_SRC python
         sum: int = 0
         for n in range(1000):
             if n % 3 == 0 or n % 5 == 0:
                 sum += n

         return sum
     #+END_SRC

     #+RESULTS: sum-python
     : 233168

     There you go! There's your answer! Of corse, I am more interested in a
     mathematical solution so let's keep going. But we know that our basic
     presupposition concerning the topology of the solution is correct. The
     problem statement demands a line and that line must be queried in order to
     accumulate a list of the members, in this case integers, that match the
     criteria of being multiples of 3 or 5. Now, what would the math based
     approach look like?

***** Mathematical Approach
      Our idea of filtering out the proper elements is right call here and we
      can imitate it somewhat before we turn to a more numerical oriented
      solution. The prize of our rigorous effort d be some formula that
      spits out the answer. I think of producing a list of the proper multiples
      by creating a linear combination of the multiples in quesion. It won't
      always be this easy but thank our lucky stars that it is in this
      scenario.

      Thus, the formula, 

      \begin{equation}
          y=3x_{1}+5x_{2}
      \end{equation}
      
